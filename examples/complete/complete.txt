This example is designed to show how to make a simple dvd slideshow from start to finish. I'm assuming you have installed all the required packages first.

Let's assume we have a directory with a bunch of pictures that we want to use in a slideshow. The directory is called "my_pictures".
Use the dir2slideshow script to quickly generate an appropriate listing of the pictures in "my_pictures". We want each picture to be displayed for 5 seconds before going on to the next picture. The name of the slideshow will be "Complete example":

> dir2slideshow -n 'Complete example' -t 5 my_pictures

This will generate an output file "Complete_example.txt" that looks like this:

title:5:Complete example
fadeout:1
background:1
fadein:1
my_pictures/pano.jpg:5:
my_pictures/picture1.jpg:5:
my_pictures/picture2.jpg:5:
fadeout:1
background:1

This will be the input file to dvd-slideshow. If you want to do anything fancy, you could edit this text file by hand at this point. We won't bother since this is a simple example. We want to name the slideshow "test complete", and add some simple audio during the slideshow:

> dvd-slideshow -n 'test complete' -f Complete_example.txt -a 'strojovna_07-TEXEMPO-30s.ogg'

You'll see the program display the progress, and assuming there are no errors, it will finish by producing the following files in the current directory:

test_complete.xml
test_complete.vob

The mpeg file is the actual video file that you can check to make sure it looks ok. Use mplayer or your favorite video player:

> mplayer test_complete.vob

Make sure everything looks ok. At this point, you could repeat this process on a different directory to generate a new slideshow, where we'd get a new set of .xml and .vob files corresponding to that slideshow, but let's keep it simple for now with just one. 

The .xml file is fairly simple. It contains the chapter information and the name of the mpeg file that you just created. It is used when making a dvd button menu with dvd-menu. 

To create a dvd navigation menu, call dvd-menu with the dvd title "Complete Example DVD", creating two buttons labeled "My example" and "Slideshow 2" which both point to the same video, test_complete.vob:

> dvd-menu -t 'My example' -t 'Slideshow 2' -f test_complete.xml -f test_complete.xml -n 'Complete Example DVD'

This command will write the output (real dvd filesystem) in the directory "dvd_fs". After the dvd-menu script finishes, you can check out your final dvd with xine using the command:

> xine -g -u 0 dvd:"`pwd`/dvd_fs/"

Now you may want to have a backup copy of all the original pictures that went into your slideshow on the dvd. Before making the dvd-compatible UDF filesystem, you can copy other stuff into the top-level of your dvd:

> cp -a my_pictures dvd_fs

The -a option copies recursively and keeps the date the same. Note that you can use the "-c" option in dvd-slideshow to perform this same function! Now, in the dvd_fs directory, it looks like this:

> ls -F
AUDIO_TS/ my_pictures/ VIDEO_TS/

The AUDIO_TS/ and VIDEO_TS/ directories are required by the dvd video standard, and contain all of the menus and video that will be used when you put this dvd into your home dvd player. If you mount it on your computer, you'll see the filesystem above.

Now let's create a dvd-compatible UDF filesystem that we can burn to a real dvd:

> mkisofs -dvd-video -udf -o dvd.iso dvd_fs

This will create the iso image dvd.iso that you can burn to a real dvd with dvdrecord. You could have also used the "-iso" option in dvd-menu to automatically create the iso image at the end of the dvd-menu script. I'm assuming that you've already found out which device your dvd recorder is on with "dvdrecord â€“scanbus" or equivalent. Mine is device number 1, hence the dev=0,1,0.

> dvdrecord -v -eject -dao speed=4 dev=0,1,0 dvd.iso

When finished, try it out in your computer or home dvd player! 

